digraph "Graphical Class Hierarchy"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node0 [label="kMarkerMap",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkMarkerMap.html"];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="Component",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structkaldi_1_1nnet1_1_1Component.html",tooltip="Abstract class, building block of the network. "];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="AveragePooling2DComponent",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1AveragePooling2DComponent.html",tooltip="AveragePoolingComponent : The input/output matrices are split to submatrices with width &#39;pool_stride_..."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="AveragePoolingComponent",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1AveragePoolingComponent.html",tooltip="AveragePoolingComponent : The input/output matrices are split to submatrices with width &#39;pool_stride_..."];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="BlockSoftmax",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1BlockSoftmax.html"];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="CopyComponent",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1CopyComponent.html",tooltip="Rearrange the matrix columns according to the indices in copy_from_indices_. "];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="Dropout",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1Dropout.html"];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="HiddenSoftmax",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1HiddenSoftmax.html"];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="KlHmm",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1KlHmm.html"];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="LengthNormComponent",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1LengthNormComponent.html",tooltip="Rescale the matrix-rows to have unit length (L2-norm). "];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="MaxPooling2DComponent",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1MaxPooling2DComponent.html",tooltip="MaxPoolingComponent : The input/output matrices are split to submatrices with width &#39;pool_stride_&#39;..."];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="MaxPoolingComponent",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1MaxPoolingComponent.html",tooltip="MaxPoolingComponent : The input/output matrices are split to submatrices with width &#39;pool_stride_&#39;..."];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="RbmBase",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1RbmBase.html"];
  Node12 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="Rbm",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1Rbm.html"];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="Sigmoid",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1Sigmoid.html"];
  Node1 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="SimpleSentenceAveragingComponent",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1SimpleSentenceAveragingComponent.html",tooltip="SimpleSentenceAveragingComponent does not have nested network, it is intended to be used inside of a ..."];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="Softmax",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1Softmax.html"];
  Node1 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="Splice",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1Splice.html",tooltip="Splices the time context of the input features in N, out k*N, FrameOffset o_1,o_2,...,o_k FrameOffset example 11frames: -5 -4 -3 -2 -1 0 1 2 3 4 5. "];
  Node1 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="Tanh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1Tanh.html"];
  Node1 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="UpdatableComponent",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1UpdatableComponent.html",tooltip="Class UpdatableComponent is a Component which has trainable parameters, it contains SGD training hype..."];
  Node19 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="AddShift",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1AddShift.html",tooltip="Adds shift to all the lines of the matrix (can be used for global mean normalization) ..."];
  Node19 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="AffineTransform",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1AffineTransform.html"];
  Node19 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="Convolutional2DComponent",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1Convolutional2DComponent.html",tooltip="Convolutional2DComponent implements convolution over 2-axis (frequency and temporal) (i..."];
  Node19 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="ConvolutionalComponent",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1ConvolutionalComponent.html",tooltip="ConvolutionalComponent implements convolution over single axis (i.e. "];
  Node19 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="FramePoolingComponent",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1FramePoolingComponent.html",tooltip="FramePoolingComponent : The input/output matrices are split to frames of width &#39;feature_dim_&#39;. "];
  Node19 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="LinearTransform",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1LinearTransform.html"];
  Node19 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="MultiBasisComponent",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1MultiBasisComponent.html"];
  Node19 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="MultistreamComponent",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1MultistreamComponent.html",tooltip="Class MultistreamComponent is an extension of UpdatableComponent for recurrent networks, which are trained with parallel sequences. "];
  Node27 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="BlstmProjected",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1BlstmProjected.html"];
  Node27 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="LstmProjected",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1LstmProjected.html"];
  Node27 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="ParallelComponent",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1ParallelComponent.html"];
  Node27 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="RecurrentComponent",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1RecurrentComponent.html",tooltip="Component with recurrent connections, &#39;tanh&#39; non-linearity. "];
  Node19 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="ParametricRelu",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1ParametricRelu.html"];
  Node19 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="Rescale",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1Rescale.html",tooltip="Rescale the data column-wise by a vector (can be used for global variance normalization) ..."];
  Node19 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="SentenceAveragingComponent",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1nnet1_1_1SentenceAveragingComponent.html",tooltip="Deprecated!!!, keeping it as Katka Zmolikova used it in JSALT 2015. "];
}
