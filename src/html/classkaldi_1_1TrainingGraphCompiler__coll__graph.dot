digraph "TrainingGraphCompiler"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="TrainingGraphCompiler",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" lex_cache_" ,fontname="Helvetica"];
  Node2 [label="TableComposeCache\<\l fst::Fst\< fst::StdArc \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structfst_1_1TableComposeCache.html"];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" matcher" ,fontname="Helvetica"];
  Node3 [label="TableMatcher\< fst::\lFst\< fst::StdArc \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classfst_1_1TableMatcher.html"];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="MatcherBase\< fst::Fst\l\< fst::StdArc \> ::Arc \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node5 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" impl_" ,fontname="Helvetica"];
  Node5 [label="shared_ptr\< fst::TableMatcher\lImpl \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node6 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" opts" ,fontname="Helvetica"];
  Node6 [label="TableComposeOptions",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structfst_1_1TableComposeOptions.html"];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="TableMatcherOptions",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structfst_1_1TableMatcherOptions.html",tooltip="TableMatcher is a matcher specialized for the case where the output side of the left FST always has e..."];
  Node8 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" table_ratio" ,fontname="Helvetica"];
  Node8 [label="float",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classfloat.html"];
  Node9 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" min_table_size" ,fontname="Helvetica"];
  Node9 [label="int",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node10 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" table_match_type" ,fontname="Helvetica"];
  Node10 [label="MatchType",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node11 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" connect" ,fontname="Helvetica"];
  Node11 [label="bool",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbool.html"];
  Node12 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" filter_type" ,fontname="Helvetica"];
  Node12 [label="ComposeFilter",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node13 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" opts_" ,fontname="Helvetica"];
  Node13 [label="TrainingGraphCompilerOptions",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structkaldi_1_1TrainingGraphCompilerOptions.html"];
  Node8 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" self_loop_scale\ntransition_scale" ,fontname="Helvetica"];
  Node11 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" rm_eps\nreorder" ,fontname="Helvetica"];
  Node14 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" disambig_syms_" ,fontname="Helvetica"];
  Node14 [label="vector\< int32 \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node15 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" lex_fst_" ,fontname="Helvetica"];
  Node15 [label="VectorFst\< fst::StdArc \> *",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node16 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ctx_dep_" ,fontname="Helvetica"];
  Node16 [label="ContextDependency",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1ContextDependency.html"];
  Node17 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="ContextDependencyInterface",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1ContextDependencyInterface.html",tooltip="context-dep-itf.h provides a link between the tree-building code in ../tree/, and the FST code in ..."];
  Node18 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" to_pdf_" ,fontname="Helvetica"];
  Node18 [label="EventMap",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1EventMap.html",tooltip="A class that is capable of representing a generic mapping from EventType (which is a vector of (key..."];
  Node19 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" N_\nP_" ,fontname="Helvetica"];
  Node19 [label="int32",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node19 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" subsequential_symbol_" ,fontname="Helvetica"];
  Node20 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" trans_model_" ,fontname="Helvetica"];
  Node20 [label="TransitionModel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1TransitionModel.html"];
  Node21 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" topo_" ,fontname="Helvetica"];
  Node21 [label="HmmTopology",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1HmmTopology.html",tooltip="A class for storing topology information for phones. "];
  Node14 -> Node21 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" phones_\nphone2idx_" ,fontname="Helvetica"];
  Node22 -> Node21 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" entries_" ,fontname="Helvetica"];
  Node22 [label="vector\< TopologyEntry \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node14 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" id2state_\nid2pdf_id_\nstate2id_" ,fontname="Helvetica"];
  Node23 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" tuples_" ,fontname="Helvetica"];
  Node23 [label="vector\< kaldi::Transition\lModel::Tuple \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node24 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" non_self_loop_log_probs\l_\nlog_probs_" ,fontname="Helvetica"];
  Node24 [label="Vector\< float \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1Vector.html"];
  Node25 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="VectorBase\< float \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classkaldi_1_1VectorBase.html"];
  Node8 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" data_" ,fontname="Helvetica"];
  Node19 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" dim_" ,fontname="Helvetica"];
  Node19 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" num_pdfs_" ,fontname="Helvetica"];
}
