<nrules>

  <regexs>

    <regex name="3_zeros">
      <comment usedby="preteledigit"/>
      <exp><![CDATA[^000$]]></exp>
    </regex>

    <regex name="alpha_numeric">
      <comment usedby="rest"/>
      <exp><![CDATA[^([a-zа-я_']+)([0-9]+)$]]></exp>
    </regex>

    <regex name="alpha_strict">
      <comment usedby="rest">
      Just lower-case alphabetical characters.
    </comment>
      <exp><![CDATA[^([a-zа-я]+)$]]></exp>
    </regex>

    <regex name="and">
      <comment usedby="date"/>
      <exp><![CDATA[^(и)$]]></exp>
    </regex>

    <regex name="apartment">
      <comment usedby="digit ssmlodd"/>
      <exp><![CDATA[^([Кк]в)\.?$]]></exp>
    </regex>

    <regex name="apartment_3digits">
      <comment usedby="digit ssmlodd"/>
      <exp><![CDATA[^(\d{1,3})$]]></exp>
    </regex>

    <regex name="apartment_number">
      <comment usedby="digit"/>
      <exp><![CDATA[^([Кк]в)\.?(\d{1,3})$]]></exp>
    </regex>

    <regex name="area_code">
      <comment usedby="pretele tele">
      The area code of a telephone number.
      Start with any number and is followed by 2 to four digits.
    </comment>
      <exp><![CDATA[^([0-9]{2,5})$]]></exp>
    </regex>

    <regex name="area_code_brackets">
      <comment usedby="pretele">
      The area code of a telephone number.
      Start with any number and is followed by 2 to four digits.
    </comment>
      <exp><![CDATA[^\(([0-9]{2,5})\)$]]></exp>
    </regex>

    <regex name="at_symbol">
      <comment usedby="www"/>
      <exp><![CDATA[^@$]]></exp>
    </regex>

    <regex name="billionscomma_no_point">
      <comment usedby="digit"/>
      <exp><![CDATA[^([+\-]?)([1-9]\d{0,2}\.[0-9]{3}\.[0-9]{3}\.[0-9]{3})$]]></exp>
    </regex>

    <regex name="billionscomma_withpoint">
      <comment usedby="digit"/>
      <exp><![CDATA[^([+\-]?)([1-9]\d{0,2}\.[0-9]{3}\.[0-9]{3}\.[0-9]{3}),([0-9][0-9])$]]></exp>
    </regex>

    <regex name="bookmaking_colon">
      <comment usedby="fractions"/>
      <exp><![CDATA[^(([1-9]\d*)[:](1))$]]></exp>
    </regex>

    <regex name="building">
      <comment usedby="ssmlodd"/>
      <exp><![CDATA[^([Сс]|[Сс]тр)\.$]]></exp>
    </regex>

    <regex name="cardinal">
      <comment usedby="pretele time premeasure measure ssmlpos digit ssmlodd"/>
      <exp><![CDATA[^([0-9]+)$]]></exp>
    </regex>

    <regex name="cardinal3">
      <comment usedby="preteledigit"/>
      <exp><![CDATA[^([0-9]{3})$]]></exp>
    </regex>

    <regex name="cardinal_1">
      <comment usedby="prefractions fractions"/>
      <exp><![CDATA[^(1)$]]></exp>
    </regex>

    <regex name="cardinal_2">
      <comment usedby="pretele"/>
      <exp><![CDATA[^(\d{2})$]]></exp>
    </regex>

    <regex name="cardinal_2_4">
      <comment usedby="fractions"/>
      <exp><![CDATA[^([234])$]]></exp>
    </regex>

    <regex name="cardinal_3">
      <comment usedby="pretele"/>
      <exp><![CDATA[^(\d{3})$]]></exp>
    </regex>

    <regex name="cardinal_3_5">
      <comment usedby="pretele"/>
      <exp><![CDATA[^(\d{3,5})$]]></exp>
    </regex>

    <regex name="cardinal_4">
      <comment usedby="pretele"/>
      <exp><![CDATA[^(\d{4})$]]></exp>
    </regex>

    <regex name="cardinal_4plus">
      <comment usedby="pretele tele"/>
      <exp><![CDATA[^(\d{4,8})$]]></exp>
    </regex>

    <regex name="cardinal_ending_1_or_2">
      <comment usedby="ssmlpos"/>
      <exp><![CDATA[^([0-9]{0,10}[02-9][12]|[12])$]]></exp>
    </regex>

    <regex name="cardinal_for_building">
      <comment usedby="ssmlodd"/>
      <exp><![CDATA[^(\d{1,2})$]]></exp>
    </regex>

    <regex name="cardinalr">
      <comment usedby="prefractions fractions"/>
      <exp><![CDATA[^([0-9]+)$]]></exp>
    </regex>

    <regex name="century">
      <comment usedby="digit ssmlodd"/>
      <exp><![CDATA[^(век[аеу])$]]></exp>
    </regex>

    <regex name="century_any">
      <comment usedby="date">
      Splits year into centuries and years
    </comment>
      <exp><![CDATA[^([12])?([1-9]00)$]]></exp>
    </regex>

    <regex name="century_any_n">
      <comment usedby="date">
      Splits year into centuries and years
    </comment>
      <exp><![CDATA[^([12])?([1-9]00)г$]]></exp>
    </regex>

    <regex name="char_digs">
      <comment usedby="odd"/>
      <exp><![CDATA[^([a-zA-Zа-яёА-ЯЁ])([0-9]+)$]]></exp>
    </regex>

    <regex name="common_acronyms">
      <comment usedby="ssml"/>
      <exp><![CDATA[^(bbc|itv|itn|abc|nbc|cbc|ibm|rt)$]]></exp>
    </regex>

    <regex name="common_saints">
      <comment usedby="ssmlodd"/>
      <exp><![CDATA[^([Пп]етербург)$]]></exp>
    </regex>

    <regex name="conjunction_g">
      <comment usedby="date"/>
      <exp><![CDATA[^(с|начиная|от)$]]></exp>
    </regex>

    <regex name="contains_signs">
      <comment usedby="signs"/>
      <exp><![CDATA[^(.*[\?!;:\.\+\-%×÷=&,\(\)\[\]\{\}\"«»@*\\/~£¥€₽¢$0-9<>].*)$]]></exp>
    </regex>

    <regex name="currency_scale">
      <comment usedby="premeasure">
    </comment>
      <exp><![CDATA[^(миллион|миллионы|миллиона|миллионов|млн|миллиарда|миллиардов|млрд|триллиона|триллионов|миллиарды|триллион|триллионы|трлн|тыс|тысяча|тысяч|тысячи)$]]></exp>
    </regex>

    <regex name="currency_symb">
      <comment usedby="currency"/>
      <exp><![CDATA[^(£|фунт|фунта|фунтов|€|¢|[Ee]uro|¢|₽|[Rr]ub|руб|коп|^[Dd]ollar$|eur|cent|\$|доллар|доллара|долларов|USD)$]]></exp>
    </regex>

    <regex name="currency_symb_fem">
      <comment usedby="currency"/>
      <exp><![CDATA[^(¥)$]]></exp>
    </regex>

    <regex name="currency_symb_masc_and_fem">
      <comment usedby="premeasure"/>
      <exp><![CDATA[^(£|фунт|фунта|фунтов|€|¢|[Ee]uro|¢|₽|[Rr]ub|руб|коп|^[Dd]ollar$|eur|cent|\$|доллар|доллара|долларов|USD|¥)$]]></exp>
    </regex>

    <regex name="date_dm_prep_range">
      <comment usedby="date">
      for the date_dm_prep_range rule
    </comment>
      <exp><![CDATA[^(со?)$]]></exp>
    </regex>

    <regex name="date_longyear_century_dots">
      <comment usedby="date"/>
      <exp><![CDATA[^(0?[1-9]|[12][0-9]|3[01])\.(0?[1-9]|1[0-2])\.([12])([0-9]00)$]]></exp>
    </regex>

    <regex name="date_longyear_dots">
      <comment usedby="date"/>
      <exp><![CDATA[^(0?[1-9]|[12][0-9]|3[01])\.(0?[1-9]|1[0-2])\.([12][0-9])([0-9]{2})$]]></exp>
    </regex>

    <regex name="date_longyear_millennium_dots">
      <comment usedby="date"/>
      <exp><![CDATA[^(0?[1-9]|[12][0-9]|3[01])\.(0?[1-9]|1[0-2])\.([12]000)$]]></exp>
    </regex>

    <regex name="date_month">
      <comment usedby="date"/>
      <exp><![CDATA[^(0?[1-9]|[1][0-2])$]]></exp>
    </regex>

    <regex name="date_sep">
      <comment usedby="date"/>
      <exp><![CDATA[^(\.|\/|\-)$]]></exp>
    </regex>

    <regex name="date_shortyear_dots">
      <comment usedby="date"/>
      <exp><![CDATA[^(0?[1-9]|[12]\d|3[01])\.(0?[1-9]|1[0-2])\.([0-9][0-9])$]]></exp>
    </regex>

    <regex name="date_shortyear_dots_nineties">
      <comment usedby="date"/>
      <exp><![CDATA[^(0?[1-9]|[12]\d|3[01])\.(0?[1-9]|1[0-2])\.(9[0-9])$]]></exp>
    </regex>

    <regex name="day_of_month">
      <comment usedby="date"/>
      <exp><![CDATA[^(0?[1-9]|[12]\d|3[01])$]]></exp>
    </regex>

    <regex name="days">
      <comment usedby="date"/>
      <exp><![CDATA[^(понедельник|вторник|среда|четверг|пятница|суббота|воскресенье|пнд?|пон?|втр?|срд?|чтв?|птн?|сбт?|вск?)$]]></exp>
    </regex>

    <regex name="days_genitive">
      <comment usedby="date"/>
      <exp><![CDATA[^(понедельника|вторника|среды|четверга|пятницы|субботы|воскресенья)$]]></exp>
    </regex>

    <regex name="decade_prep">
      <comment usedby="date">
      Prepositions used for decades
      GJL - в течение and в конце have two tokens, just using the latter token at the moment
    </comment>
      <exp><![CDATA[^(в|течение|после|конце|до)$]]></exp>
    </regex>

    <regex name="degree_symbol_temp_unit">
      <comment usedby="temp"/>
      <exp><![CDATA[^(°)([cсkкf])$]]></exp>
    </regex>

    <regex name="do">
      <comment usedby="ssmlodd">
      Just до
    </comment>
      <exp><![CDATA[^(до)$]]></exp>
    </regex>

    <regex name="domain_2names_2nd_tld">
      <comment usedby="www">
            Example: store.amazon.co.uk
        </comment>
      <exp><![CDATA[^([a-zA-Z0-9]+)(\.)([a-zA-Z0-9]+)(\.)([a-zA-Z]{2,3})(\.)([a-zA-Z]{2,4})$]]></exp>
    </regex>

    <regex name="domain_2names_tld">
      <comment usedby="www">
            Example: store.amazon.com
        </comment>
      <exp><![CDATA[^([a-zA-Z0-9]+)(\.)([a-zA-Z0-9]+)(\.)([a-zA-Z]{2,4})$]]></exp>
    </regex>

    <regex name="domain_2nd_tld">
      <comment usedby="www">
            Example: amazon.co.uk
        </comment>
      <exp><![CDATA[^([a-zA-Z0-9]+)(\.)([a-zA-Z]{2,3})(\.)([a-zA-Z]{2,4})$]]></exp>
    </regex>

    <regex name="domain_2nms_2nd_tld">
      <comment usedby="www">
            Example: store.amazon.ac.uk
        </comment>
      <exp><![CDATA[^([a-zA-Z0-9]+)(\.)([a-zA-Z0-9]+)(\.)([a-zA-Z]{2,3})(\.)([a-zA-Z]{2,4})$]]></exp>
    </regex>

    <regex name="domain_tld">
      <comment usedby="www">
            Example: amazon.com
        </comment>
      <exp><![CDATA[^([a-zA-Z0-9]+)(\.)([a-zA-Z]{2,4})$]]></exp>
    </regex>

    <regex name="e">
      <comment usedby="date"/>
      <exp><![CDATA[^(е)$]]></exp>
    </regex>

    <regex name="e_only">
      <comment usedby="ssmlodd"/>
      <exp><![CDATA[^(Э|э)\.?$]]></exp>
    </regex>

    <regex name="eight">
      <comment usedby="pretele">
      The mobile phone numbers start with 8.
    </comment>
      <exp><![CDATA[^(8)$]]></exp>
    </regex>

    <regex name="email_name_full">
      <comment usedby="www">
            Example: 'john.muster' or 'john_muster'.
        </comment>
      <exp><![CDATA[^([a-zA-Z0-9]+)([_\.])([a-zA-Z0-9]+)$]]></exp>
    </regex>

    <regex name="email_name_simple">
      <comment usedby="www">
            Example: 'muster'.
        </comment>
      <exp><![CDATA[^([a-zA-Z0-9]+)$]]></exp>
    </regex>

    <regex name="ends_one">
      <comment usedby="premeasure"/>
      <exp><![CDATA[^(1|[2-9]1|\d{2,11}1)$]]></exp>
    </regex>

    <regex name="fake_ellipsis">
      <comment usedby="signs"/>
      <exp><![CDATA[^([a-zA-Zа-яА-Я0-9]+)(\.\.\.)([a-zA-Zа-яА-Я0-9]+)$]]></exp>
    </regex>

    <regex name="fem_genitive_ending">
      <comment usedby="digit"/>
      <exp><![CDATA[^([а-яА-Я]+ы|[а-яА-Я]+и|[а-яА-Я]+е)$]]></exp>
    </regex>

    <regex name="fem_instr_ending">
      <comment usedby="digit"/>
      <exp><![CDATA[^([а-яА-Я]+ой|[а-яА-Я]+ей|[а-яА-Я]+ией)$]]></exp>
    </regex>

    <regex name="fem_nominative_ending">
      <comment usedby="digit"/>
      <exp><![CDATA[^([а-яА-Я]+а|[а-яА-Я]+я)$]]></exp>
    </regex>

    <regex name="fem_sing_acc">
      <comment usedby="digit"/>
      <exp><![CDATA[^(ю)$]]></exp>
    </regex>

    <regex name="fem_sing_gen">
      <comment usedby="digit"/>
      <exp><![CDATA[^(о?й|ей)$]]></exp>
    </regex>

    <regex name="fem_sing_nom">
      <comment usedby="digit"/>
      <exp><![CDATA[^(а?я)$]]></exp>
    </regex>

    <regex name="feminine_nouns">
      <comment usedby="odd"/>
      <exp><![CDATA[^(книга|глава|поправка|редакция)$]]></exp>
    </regex>

    <regex name="file_name_doc">
      <comment usedby="www">
      List of file suffixes which are spoken as a word.
      Taken from: http://www.fileinfo.com/common.php
    </comment>
      <exp><![CDATA[^(.+)(\.)(docx?|log|dat|gif|tif|wav|avi|mov|sys|ini|com|app|exe|deb|rar|zipx?|bin|java|py|bak|iso|torrent)$]]></exp>
    </regex>

    <regex name="file_name_pdf">
      <comment usedby="www">
      List of file suffixes which are spoken as single characters.
      Taken from: http://www.fileinfo.com/common.php
    </comment>
      <exp><![CDATA[^(.+)(\.)(pdf|html?|txt|rtf|msg|csv|dll|pps|pptx?|sql|xlsx?|xml|bmp|jpg|png|psd|e?ps|svg|mp3|ra|wav|wma|avi|flv|mp4|mpg|qt|rm|swf|vob|wmv|css|js|jsp|php|rss|bat|cgi|gz|pkg|c|cpp|pl|tmp|dmg|)$]]></exp>
    </regex>

    <regex name="float">
      <comment usedby="premeasure measure currency digit">
      $00 = +/-
      $01 = number
      $02 = ,
      $03 = number
      $04? = ^-.*
    </comment>
      <exp><![CDATA[^(\-?)([0-9]+)(\.|,)([0-9]+)$]]></exp>
    </regex>

    <regex name="float_1">
      <comment usedby="premeasure">
      $00 = +/-
      $01 = number
      $02 = ,
      $03 = number
    </comment>
      <exp><![CDATA[^(\-?)([0-9]+)(,)(1|[2-9]1|\d{2,9}1)$]]></exp>
    </regex>

    <regex name="float_1_point_1_hundredths">
      <comment usedby="measure digit">
      $00 = +/-
      $01 = number
      $02 = ,
      $03 = number
      $04? = ^-.*
    </comment>
      <exp><![CDATA[^(\-?)(\d*?1)(\.|,)([02-9]1)$]]></exp>
    </regex>

    <regex name="float_1_point_1_tenths">
      <comment usedby="measure digit">
      $00 = +/-
      $01 = number
      $02 = ,
      $03 = number
      $04? = ^-.*
    </comment>
      <exp><![CDATA[^(\-?)(\d*?1)(\.|,)(1)$]]></exp>
    </regex>

    <regex name="float_1_point_1_thousandths">
      <comment usedby="measure digit">
      $00 = +/-
      $01 = number
      $02 = ,
      $03 = number
      $04? = ^-.*
    </comment>
      <exp><![CDATA[^(\-?)(\d*?1)(\.|,)([0-9][02-9]1)$]]></exp>
    </regex>

    <regex name="float_1_point_2_4">
      <comment usedby="currency">
      $00 = +/-
      $01 = number
      $02 = ,
      $03 = number
      $04? = ^-.*
    </comment>
      <exp><![CDATA[^(\-?)(\d*?1)(\.|,)([02-9][2-4])$]]></exp>
    </regex>

    <regex name="float_1_point_digits">
      <comment usedby="currency">
      $00 = +/-
      $01 = number
      $02 = ,
      $03 = number
      $04? = ^-.*
    </comment>
      <exp><![CDATA[^(\-?)(\d*?1)(\.|,)([0-9]+)$]]></exp>
    </regex>

    <regex name="float_1_point_gt1_hundredths">
      <comment usedby="measure digit">
      $00 = +/-
      $01 = number
      $02 = ,
      $03 = number
      $04? = ^-.*
    </comment>
      <exp><![CDATA[^(\-?)(\d*?1)(\.|,)(0[02-9]|[1-9][0-9])$]]></exp>
    </regex>

    <regex name="float_1_point_gt1_tenths">
      <comment usedby="measure digit">
      $00 = +/-
      $01 = number
      $02 = ,
      $03 = number
      $04? = ^-.*
    </comment>
      <exp><![CDATA[^(\-?)(\d*?1)(\.|,)([02-9])$]]></exp>
    </regex>

    <regex name="float_1_point_pl">
      <comment usedby="currency">
      $00 = +/-
      $01 = number
      $02 = ,
      $03 = number
      $04? = ^-.*
    </comment>
      <exp><![CDATA[^(\-?)(\d*?1)(\.|,)(1[0-9]|[2-9][05-9])$]]></exp>
    </regex>

    <regex name="float_1_point_thousandths">
      <comment usedby="measure digit">
      $00 = +/-
      $01 = number
      $02 = ,
      $03 = number
      $04? = ^-.*
    </comment>
      <exp><![CDATA[^(\-?)(\d*?1)(\.|,)([0-9][0-9][0-9])$]]></exp>
    </regex>

    <regex name="float_2_4">
      <comment usedby="premeasure">
      $00 = +/-
      $01 = number
      $02 = ,
      $03 = number
    </comment>
      <exp><![CDATA[^(\-?)([0-9]+)(,)([2-4]|[2-9][2-4]|\d{2,9}[2-4])$]]></exp>
    </regex>

    <regex name="float_2_4_point_1">
      <comment usedby="currency">
      $00 = +/-
      $01 = number
      $02 = ,
      $03 = number
      $04? = ^-.*
    </comment>
      <exp><![CDATA[^(\-?)(\d*?[2-4])(\.|,)([02-9]1)$]]></exp>
    </regex>

    <regex name="float_2_4_point_2_4">
      <comment usedby="currency">
      $00 = +/-
      $01 = number
      $02 = ,
      $03 = number
      $04? = ^-.*
    </comment>
      <exp><![CDATA[^(\-?)(\d*?[2-4])(\.|,)([02-9][2-4])$]]></exp>
    </regex>

    <regex name="float_2_4_point_digits">
      <comment usedby="currency">
      $00 = +/-
      $01 = number
      $02 = ,
      $03 = number
      $04? = ^-.*
    </comment>
      <exp><![CDATA[^(\-?)(\d*?[2-4])(\.|,)([0-9]+)$]]></exp>
    </regex>

    <regex name="float_2_4_point_pl">
      <comment usedby="currency">
      $00 = +/-
      $01 = number
      $02 = ,
      $03 = number
      $04? = ^-.*
    </comment>
      <exp><![CDATA[^(\-?)(\d*?[2-4])(\.|,)(1[0-9]|[2-9][05-9])$]]></exp>
    </regex>

    <regex name="float_asdigits">
      <comment usedby="premeasure">
      $00 = +/-
      $01 = number
      $02 = ,
      $03 = number
    </comment>
      <exp><![CDATA[^(\-?)([0-9]+)(,)(0\d{0,9})$]]></exp>
    </regex>

    <regex name="float_asnumber">
      <comment usedby="currency digit">
      $00 = +/-
      $01 = number
      $02 = ,
      $03 = number
      $04? = ^-.*
    </comment>
      <exp><![CDATA[^(\-?)([0-9]+)(\.|,)([1-9][0-9])$]]></exp>
    </regex>

    <regex name="float_gt1_point_1_hundredths">
      <comment usedby="measure digit">
      $00 = +/-
      $01 = number
      $02 = ,
      $03 = number
      $04? = ^-.*
    </comment>
      <exp><![CDATA[^(\-?)(\d*?[02-9]|11)(\.|,)([02-9]1)$]]></exp>
    </regex>

    <regex name="float_gt1_point_1_tenths">
      <comment usedby="measure digit">
      $00 = +/-
      $01 = number
      $02 = ,
      $03 = number
      $04? = ^-.*
    </comment>
      <exp><![CDATA[^(\-?)(\d*?[02-9]|11)(\.|,)(1)$]]></exp>
    </regex>

    <regex name="float_gt1_point_gt1_hundredths">
      <comment usedby="measure digit">
      $00 = +/-
      $01 = number
      $02 = ,
      $03 = number
      $04? = ^-.*
    </comment>
      <exp><![CDATA[^(\-?)(\d*?[02-9]|11)(\.|,)(0[02-9]|[1-9][0-9])$]]></exp>
    </regex>

    <regex name="float_gt1_point_gt1_tenths">
      <comment usedby="measure digit">
      $00 = +/-
      $01 = number
      $02 = ,
      $03 = number
      $04? = ^-.*
    </comment>
      <exp><![CDATA[^(\-?)(\d*?[02-9]|11)(\.|,)([02-9])$]]></exp>
    </regex>

    <regex name="float_measure_masc">
      <comment usedby="measure">
    </comment>
      <exp><![CDATA[^(\-?)([0-9]+)(\.|,)([0-9]+)(метр|миллиметр|центнер|километр|сантиметр|метра|миллиметра|центнера|километра|сантиметра|метров|миллиметров|центнеров|километров|сантиметров|тонн|тонна|тонны|км|кг|мм|см|м|гр|%|квм|ч|гб|мб|л|мин|сек|т|кмч|ц|млн|млрд|трлн|тыс)$]]></exp>
    </regex>

    <regex name="float_pl_point_1">
      <comment usedby="currency">
      $00 = +/-
      $01 = number
      $02 = ,
      $03 = number
      $04? = ^-.*
    </comment>
      <exp><![CDATA[^(\-?)(\d*?1[0-9]|\d*?[0]|\d*?[5-9])(\.|,)([02-9]1)$]]></exp>
    </regex>

    <regex name="float_pl_point_2_4">
      <comment usedby="currency">
      $00 = +/-
      $01 = number
      $02 = ,
      $03 = number
      $04? = ^-.*
    </comment>
      <exp><![CDATA[^(\-?)(\d*?1[0-9]|\d*?[0]|\d*?[5-9])(\.|,)([02-9][2-4])$]]></exp>
    </regex>

    <regex name="float_pl_point_digits">
      <comment usedby="currency">
      $00 = +/-
      $01 = number
      $02 = ,
      $03 = number
      $04? = ^-.*
    </comment>
      <exp><![CDATA[^(\-?)(\d*?1[0-9]|\d*?[0]|\d*?[5-9])(\.|,)([0-9]+)$]]></exp>
    </regex>

    <regex name="float_pl_point_pl">
      <comment usedby="currency">
      $00 = +/-
      $01 = number
      $02 = ,
      $03 = number
      $04? = ^-.*
    </comment>
      <exp><![CDATA[^(\-?)(\d*?1[0-9]|\d*?[0]|\d*?[5-9])(\.|,)(1[0-9]|[2-9][5-9])$]]></exp>
    </regex>

    <regex name="float_point_thousandths">
      <comment usedby="measure digit">
      $00 = +/-
      $01 = number
      $02 = ,
      $03 = number
      $04? = ^-.*
    </comment>
      <exp><![CDATA[^(\-?)(\d*?[02-9]|11)(\.|,)([0-9][0-9][0-9])$]]></exp>
    </regex>

    <regex name="float_point_thousandths_1">
      <comment usedby="measure digit">
      $00 = +/-
      $01 = number
      $02 = ,
      $03 = number
      $04? = ^-.*
    </comment>
      <exp><![CDATA[^(\-?)(\d*?[02-9]|11)(\.|,)([0-9][02-9]1)$]]></exp>
    </regex>

    <regex name="float_scale">
      <comment usedby="measure">
    </comment>
      <exp><![CDATA[^(\-?)([0-9]+)(\.|,)([0-9]+)(млн|млрд|трлн|тыс)$]]></exp>
    </regex>

    <regex name="gorod_abb">
      <comment usedby="ssmlodd"/>
      <exp><![CDATA[^(Г|г|Гор|гор)\.?$]]></exp>
    </regex>

    <regex name="hour">
      <comment usedby="measure">
    </comment>
      <exp><![CDATA[^(ч)$]]></exp>
    </regex>

    <regex name="house">
      <comment usedby="digit"/>
      <exp><![CDATA[^([Д|д])\.?$]]></exp>
    </regex>

    <regex name="house_3digits">
      <comment usedby="digit"/>
      <exp><![CDATA[^(\d{1,3})$]]></exp>
    </regex>

    <regex name="house_number">
      <comment usedby="digit"/>
      <exp><![CDATA[^([Д|д])\.?(\d{1,3})$]]></exp>
    </regex>

    <regex name="hyphen">
      <comment usedby="time date measure digit ssmlodd"/>
      <exp><![CDATA[^[-\?]$]]></exp>
    </regex>

    <regex name="in_decade_full_no_hyphen">
      <comment usedby="date">
      Covers cases like '20s' when talking about years, eg 1920s
    </comment>
      <exp><![CDATA[^(1[1-9]|2[0-2])([2-9]0)(е)$]]></exp>
    </regex>

    <regex name="in_month">
      <comment usedby="date"/>
      <exp><![CDATA[^(январе|феврале|марте|апреле|мае|июне|июле|августе|сентябре|октябре|ноябре|декабре|янв|февр?|мар|апр|июн|июл|авг|сен|сент|окт|ноябр?|дек)$]]></exp>
    </regex>

    <regex name="in_number_decade_no_hyphen">
      <comment usedby="date">
      Covers cases like '20s' when talking about years, eg 1920s
    </comment>
      <exp><![CDATA[^([2-9]0)(е)$]]></exp>
    </regex>

    <regex name="int_1">
      <comment usedby="preteledigit premeasure measure">
      GJL - Numbers ending 1, but not 11 (caught by int_pl)
    </comment>
      <exp><![CDATA[^(0?0?1)$]]></exp>
    </regex>

    <regex name="int_1_degree">
      <comment usedby="temp"/>
      <exp><![CDATA[^(1)(°)$]]></exp>
    </regex>

    <regex name="int_2_4">
      <comment usedby="temp preteledigit premeasure measure currency">
      GJL - Numbers endings 2,3,4, but not 12,13,14 (caught by int_pl)
    </comment>
      <exp><![CDATA[^(\d*?[2-4])$]]></exp>
    </regex>

    <regex name="int_2_4_degree">
      <comment usedby="temp"/>
      <exp><![CDATA[^(\d*?[2-4])(°)$]]></exp>
    </regex>

    <regex name="int_2_4_measure">
      <comment usedby="measure">
      GJL - Numbers endings 2,3,4, but not 12,13,14 (caught by int_pl)
    </comment>
      <exp><![CDATA[^(\d*?[2-4])(метр|миллиметр|центнер|километр|сантиметр|метра|миллиметра|центнера|километра|сантиметра|метров|миллиметров|центнеров|километров|сантиметров|тонн|тонна|тонны|км|кг|мм|см|м|г|%|квм|ч|гб|мб|л|мин|сек|т|кмч|ц|млн|млрд|трлн|тыс)$]]></exp>
    </regex>

    <regex name="int_5_20_degree">
      <comment usedby="temp"/>
      <exp><![CDATA[^(\d*?1[0-9]|\d*?[015-9])(°)$]]></exp>
    </regex>

    <regex name="int_code">
      <comment usedby="pretele">
      The area code of a telephone number.
      Start with plus or 00, followed by 1 to 3 digits
    </comment>
      <exp><![CDATA[^([1-9][0-9]?[0-9]?)$]]></exp>
    </regex>

    <regex name="int_ends_1">
      <comment usedby="temp measure currency">
      Numbers ending 1, but not 11 (caught by int_pl)
    </comment>
      <exp><![CDATA[^(\d*?1)$]]></exp>
    </regex>

    <regex name="int_ends_1_measure">
      <comment usedby="measure">
      GJL - Numbers ending 1, but not 11 (caught by int_pl)
    </comment>
      <exp><![CDATA[^(\d*?1)(метр|миллиметр|центнер|километр|сантиметр|метра|миллиметра|центнера|километра|сантиметра|метров|миллиметров|центнеров|километров|сантиметров|тонн|тонна|тонны|км|кг|мм|см|м|г|%|квм|ч|гб|мб|л|мин|сек|т|кмч|ц|млн|млрд|трлн|тыс)$]]></exp>
    </regex>

    <regex name="int_gen">
      <comment usedby="currency">
      GJL - Numbers not ending 1, but including 11
    </comment>
      <exp><![CDATA[^(11|\d*?[02-9])$]]></exp>
    </regex>

    <regex name="int_pl">
      <comment usedby="temp preteledigit premeasure measure currency">
      GJL - Numbers ending 5,6,7,8,9,0, plus 11 to 19
    </comment>
      <exp><![CDATA[^(\d*?1[0-9]|\d*?[0]|\d*?[5-9])$]]></exp>
    </regex>

    <regex name="int_pl_measure">
      <comment usedby="measure">
      GJL - Numbers ending 5,6,7,8,9,0, plus 11 to 19
    </comment>
      <exp><![CDATA[^(\d*?1[0-9]|\d*?[0]|\d*?[5-9])(метр|миллиметр|центнер|километр|сантиметр|метра|миллиметра|центнера|километра|сантиметра|метров|миллиметров|центнеров|километров|сантиметров|тонн|тонна|тонны|км|кг|мм|см|м|г|%|квм|ч|гб|мб|л|литр|литра|литров|мин|сек|т|кмч|ц|млн|млрд|трлн|тыс)$]]></exp>
    </regex>

    <regex name="is_hyphen">
      <comment usedby="pretele tele date"/>
      <exp><![CDATA[^(\-)$]]></exp>
    </regex>

    <regex name="large_cities">
      <comment usedby="ssmlodd"/>
      <exp><![CDATA[^(москва|санкт|калуга|новосибирск|екатеринбург|нижний|казань|челябинск|омск|самара|ростов|уфа|красноярск|пермь|воронеж|волгоград|краснодар|саратов|тюмень|тольятти|ижевск|барнаул|ульяновск|иркутск|хабаровск|ярославль|махачкала|томск|оренбург|кемерово|новокузнецк|астрахань|тула|калининград|тверь|сочи|архангельск|смоленск|мурманск|грозный)$]]></exp>
    </regex>

    <regex name="letija">
      <comment usedby="digit"/>
      <exp><![CDATA[^(летия)$]]></exp>
    </regex>

    <regex name="letni_catch_all">
      <comment usedby="digit">
    </comment>
      <exp><![CDATA[^(летний|летнего|летнему|летним|летнем|летнее|летняя|летней|летнюю|летние|летних|летними)$]]></exp>
    </regex>

    <regex name="masc_neut_dative_ending">
      <comment usedby="digit"/>
      <exp><![CDATA[^([а-яА-Я]+у|[а-яА-Я]+ю)$]]></exp>
    </regex>

    <regex name="masc_neut_genitive_ending">
      <comment usedby="digit"/>
      <exp><![CDATA[^([а-яА-Я]+а|[а-яА-Я]+я|[а-яА-Я]+ов|[а-яА-Я]+ев)$]]></exp>
    </regex>

    <regex name="masc_neut_instr_ending">
      <comment usedby="digit"/>
      <exp><![CDATA[^([а-яА-Я]+ом|[а-яА-Я]+ем)$]]></exp>
    </regex>

    <regex name="masc_neut_prepositional_ending">
      <comment usedby="digit"/>
      <exp><![CDATA[^([а-яА-Я]+е)$]]></exp>
    </regex>

    <regex name="masc_sing_dat">
      <comment usedby="digit"/>
      <exp><![CDATA[^(му)$]]></exp>
    </regex>

    <regex name="masc_sing_gen">
      <comment usedby="date digit"/>
      <exp><![CDATA[^(го)$]]></exp>
    </regex>

    <regex name="masc_sing_instr">
      <comment usedby="digit"/>
      <exp><![CDATA[^(ым)$]]></exp>
    </regex>

    <regex name="masc_sing_nom">
      <comment usedby="time digit"/>
      <exp><![CDATA[^(й)$]]></exp>
    </regex>

    <regex name="masc_sing_prep">
      <comment usedby="digit"/>
      <exp><![CDATA[^(о?м)$]]></exp>
    </regex>

    <regex name="masculine_nouns">
      <comment usedby="odd"/>
      <exp><![CDATA[^(параграф|абзац|том|закон|постулат)$]]></exp>
    </regex>

    <regex name="max_3_digits">
      <comment usedby="date predigit digit"/>
      <exp><![CDATA[^([1-9][0-9]{0,2})$]]></exp>
    </regex>

    <regex name="measure_masc">
      <comment usedby="measure">
    </comment>
      <exp><![CDATA[^(метр|миллиметр|центнер|километр|сантиметр|метра|миллиметра|центнера|километра|сантиметра|литра|метров|миллиметров|центнеров|километров|сантиметров|литров|литра|тонн|тонна|тонны|миллиона|миллионов|км|кг|мм|см|м|гр|%|квм|ч|гб|мб|л|мин|сек|т|кмч|ц|млн|млрд|трлн|тыс)\.?$]]></exp>
    </regex>

    <regex name="millennium">
      <comment usedby="date">
      Splits year into centuries and years
    </comment>
      <exp>_
      <![CDATA[^([12]000)$]]>
    </exp>
    </regex>

    <regex name="millennium_n">
      <comment usedby="date">
      Splits year into centuries and years
    </comment>
      <exp>_
      <![CDATA[^([12]000)г$]]>
    </exp>
    </regex>

    <regex name="millionscomma_no_point">
      <comment usedby="digit"/>
      <exp><![CDATA[^([+\-]?)([1-9]\d{0,2}\.[0-9]{3}\.[0-9]{3})$]]></exp>
    </regex>

    <regex name="millionscomma_withpoint">
      <comment usedby="digit"/>
      <exp><![CDATA[^([+\-]?)([1-9]\d{0,2}\.[0-9]{3}\.[0-9]{3}),([0-9][0-9])$]]></exp>
    </regex>

    <regex name="minute">
      <comment usedby="measure"/>
      <exp><![CDATA[^минута$]]></exp>
    </regex>

    <regex name="minutye">
      <comment usedby="time"/>
      <exp><![CDATA[^минуте$]]></exp>
    </regex>

    <regex name="month_name">
      <comment usedby="date"/>
      <exp><![CDATA[^(января|февраля|марта|апреля|мая|июня|июля|августа|сентября|октября|ноября|декабря|янв|февр?|мар|апр|июн|июл|авг|сен|сент|окт|ноябр?|дек)$]]></exp>
    </regex>

    <regex name="month_name_nominativ">
      <comment usedby="date"/>
      <exp><![CDATA[^(явнарь|февраль|март|апрель|май|июнь|июль|август|сентябрь|октябрь|ноябрь|декабрь|янв|февр?|мар|апр|июн|июл|авг|сен|сент|окт|ноябр?|дек)$]]></exp>
    </regex>

    <regex name="n_letni_masc">
      <comment usedby="date"/>
      <exp><![CDATA[^(летний)$]]></exp>
    </regex>

    <regex name="n_only">
      <comment usedby="ssmlodd"/>
      <exp><![CDATA[^(Н|н)\.?$]]></exp>
    </regex>

    <regex name="neut_nominative_ending">
      <comment usedby="digit"/>
      <exp><![CDATA[^([а-яА-Я]+о|[а-яА-Я]+е)$]]></exp>
    </regex>

    <regex name="neuter_nouns">
      <comment usedby="odd"/>
      <exp><![CDATA[^(тысячелетие|изменение|исправление)$]]></exp>
    </regex>

    <regex name="neutr_sing_nom">
      <comment usedby="digit"/>
      <exp><![CDATA[^(о?е)$]]></exp>
    </regex>

    <regex name="night">
      <comment usedby="date">
    </comment>
      <exp><![CDATA[^(ночь)$]]></exp>
    </regex>

    <regex name="not_alpha">
      <comment usedby="rest"/>
      <exp><![CDATA[^(.*[^а-яёА-ЯЁa-zA-Z\-_ ].*)$]]></exp>
    </regex>

    <regex name="not_upper_case">
      <comment usedby="odd">
        </comment>
      <exp><![CDATA[^[^A-ZА-Я]+|[A-ZА-Я][a-zа-я]+$]]></exp>
    </regex>

    <regex name="nr_colon_nr">
      <comment usedby="fractions">
      Cases like "1:1" "3:2" "1:5"
    </comment>
      <exp><![CDATA[^([0-9])(:)([0-9])$]]></exp>
    </regex>

    <regex name="number3">
      <comment usedby="preteledigit">
      Match any kind of number
    </comment>
      <exp><![CDATA[^([0-9]{3})(([,\.])([0-9]+))?$]]></exp>
    </regex>

    <regex name="number_decade">
      <comment usedby="date">
      Covers cases like '20s' when talking about years, eg 1920s
    </comment>
      <exp><![CDATA[^([2-9]0)$]]></exp>
    </regex>

    <regex name="number_decade_full">
      <comment usedby="date">
      Covers cases like '20s' when talking about years, eg 1920s
    </comment>
      <exp><![CDATA[^(1[1-9]|2[0-2])([2-9]0)$]]></exp>
    </regex>

    <regex name="number_decade_full_no_hyphen">
      <comment usedby="date">
      Covers cases like '20s' when talking about years, eg 1920s
    </comment>
      <exp><![CDATA[^(1[1-9]|2[0-2])([2-9]0)(х)$]]></exp>
    </regex>

    <regex name="number_decade_no_hyphen">
      <comment usedby="date">
      Covers cases like '20s' when talking about years, eg 1920s
    </comment>
      <exp><![CDATA[^([2-9]0)(х)$]]></exp>
    </regex>

    <regex name="numeric_alpha">
      <comment usedby="rest"/>
      <exp><![CDATA[^([0-9]+([a-zа-я_']+))$]]></exp>
    </regex>

    <regex name="of_kilometers">
      <comment usedby="measure">
    </comment>
      <exp><![CDATA[^(км)$]]></exp>
    </regex>

    <regex name="of_meters">
      <comment usedby="measure">
    </comment>
      <exp><![CDATA[^(м)$]]></exp>
    </regex>

    <regex name="of_thousands">
      <comment usedby="ssmlpos"/>
      <exp><![CDATA[^(тысяч)$]]></exp>
    </regex>

    <regex name="page">
      <comment usedby="ssmlodd"/>
      <exp><![CDATA[^(С|с|Стр|стр)\.$]]></exp>
    </regex>

    <regex name="page_go_to">
      <comment usedby="ssmlodd"/>
      <exp><![CDATA[^(перейти|перешл[аи]|перешёл|переход|перейдёт|перейдут|переходят|перескочить|перескочил[аи]|перескочил|перескочут|перескочат|перепрыгнуть|перепрыгнул|перепрыгнула|перепрыгнули|перепрыгнут)$]]></exp>
    </regex>

    <regex name="page_pered">
      <comment usedby="ssmlodd"/>
      <exp><![CDATA[^(перед)$]]></exp>
    </regex>

    <regex name="place">
      <comment usedby="predigit">
    </comment>
      <exp><![CDATA[^(место)$]]></exp>
    </regex>

    <regex name="plural_gen">
      <comment usedby="date digit"/>
      <exp><![CDATA[^(ы?х)$]]></exp>
    </regex>

    <regex name="plural_instr">
      <comment usedby="digit"/>
      <exp><![CDATA[^(ми)$]]></exp>
    </regex>

    <regex name="plural_nom">
      <comment usedby="digit"/>
      <exp><![CDATA[^(ы?е|и)$]]></exp>
    </regex>

    <regex name="plusminus">
      <comment usedby="temp pretele"/>
      <exp><![CDATA[^[+\-]$]]></exp>
    </regex>

    <regex name="pos_acc_f">
      <comment usedby="ssmlpos">
      Feminine accusative singular and plural
    </comment>
      <exp><![CDATA[^.*Ncf[sp]a.*$]]></exp>
    </regex>

    <regex name="pos_dat_mn">
      <comment usedby="ssmlpos">
      Masculine dative singular and plural
    </comment>
      <exp><![CDATA[^.*Nc[mn][sp]d.*$]]></exp>
    </regex>

    <regex name="pos_dat_prep_f">
      <comment usedby="ssmlpos">
      Feminine dative singular and plural
    </comment>
      <exp><![CDATA[^.*Ncf[sp][dl].*$]]></exp>
    </regex>

    <regex name="pos_gen_mn">
      <comment usedby="ssmlpos">
      Masculine genitive singular and plural
    </comment>
      <exp><![CDATA[^.*Nc[mn][sp]g.*$]]></exp>
    </regex>

    <regex name="pos_gen_prep_f">
      <comment usedby="ssmlpos">
      Feminine genitive singular and plural
    </comment>
      <exp><![CDATA[^.*Ncf[sp][gl].*$]]></exp>
    </regex>

    <regex name="pos_inst_f">
      <comment usedby="ssmlpos">
      Masculine/Neuter instrumental singular and plural
    </comment>
      <exp><![CDATA[^.*Ncf[sp]i.*$]]></exp>
    </regex>

    <regex name="pos_inst_mn">
      <comment usedby="ssmlpos">
      Masculine/Neuter instrumental singular and plural
    </comment>
      <exp><![CDATA[^(.*Nc[mn][sp]i.*|.*Afpmpif.*)$]]></exp>
    </regex>

    <regex name="pos_loc_f">
      <comment usedby="ssmlpos">
      Masculine locative singular and plural
    </comment>
      <exp><![CDATA[^.*Ncf[sp]l.*$]]></exp>
    </regex>

    <regex name="pos_loc_mn">
      <comment usedby="ssmlpos">
      Masculine locative singular and plural
    </comment>
      <exp><![CDATA[^.*Nc[mn][sp]l.*$]]></exp>
    </regex>

    <regex name="pos_nom_acc_m">
      <comment usedby="ssmlpos">
      Masculine nominative/accusative singular and plural
    </comment>
      <exp><![CDATA[^.*Ncm[sp][na].*$]]></exp>
    </regex>

    <regex name="pos_nom_f">
      <comment usedby="ssmlpos">
      Feminine nominative singular and plural
    </comment>
      <exp><![CDATA[^.*Ncf[sp]n.*$]]></exp>
    </regex>

    <regex name="pos_nom_n">
      <comment usedby="ssmlpos">
      Neuter nominative singular and plural
    </comment>
      <exp><![CDATA[^.*Ncn[sp]n.*$]]></exp>
    </regex>

    <regex name="pos_verb_forces_genitive">
      <comment usedby="date">
      Verb that causes dates to become genitive
    </comment>
      <exp><![CDATA[^.*Vmif3p-a-p.*$]]></exp>
    </regex>

    <regex name="pre_date_nomin">
      <comment usedby="date">
    </comment>
      <exp><![CDATA[^(по|было|стало|считается|запомнится)$]]></exp>
    </regex>

    <regex name="prep_acc">
      <comment usedby="time date">
    </comment>
      <exp><![CDATA[^(на|по)$]]></exp>
    </regex>

    <regex name="prep_acc_date">
      <comment usedby="date">
    </comment>
      <exp><![CDATA[^(за|через)$]]></exp>
    </regex>

    <regex name="prep_acc_or_hyphen">
      <comment usedby="date">
    </comment>
      <exp><![CDATA[^(на|по|\-)$]]></exp>
    </regex>

    <regex name="prep_acc_time">
      <comment usedby="time">
    </comment>
      <exp><![CDATA[^(за|через|в)$]]></exp>
    </regex>

    <regex name="prep_dat">
      <comment usedby="time date ssmlodd">
    </comment>
      <exp><![CDATA[^(к)$]]></exp>
    </regex>

    <regex name="prep_dative">
      <comment usedby="measure digit">
      Prepositions that are followed by dative case
    </comment>
      <exp><![CDATA[^(благодаря|вопреки|ко?|по)$]]></exp>
    </regex>

    <regex name="prep_gen">
      <comment usedby="time measure ssmlpos digit">
      GJL - в течение, не ранее, судя по, and не позднее are two tokens, just using the latter token at the moment
    </comment>
      <exp><![CDATA[^(со?|до|около|течение|после|после|из|ранее|позднее|от|протяжении|более|больше|менее|меньше|нет|по|размере)$]]></exp>
    </regex>

    <regex name="prep_gen_currency">
      <comment usedby="premeasure currency">
      GJL - в размере, в течение and начиная с are two tokens, just using the latter token at the moment
    </comment>
      <exp><![CDATA[^(с|около|менее|более|размере|до|течение|после|от)$]]></exp>
    </regex>

    <regex name="prep_gen_date">
      <comment usedby="date">
    </comment>
      <exp><![CDATA[^(со?|до|около|течение|после|после|из|ранее|позднее|от|протяжении|более|еще|родилась|родился|родились|родилось|родится|родятся|умер|умерла|умерло|погиб|погибла|погибли|погибло|нападение|состоялся|состоял[аио]сь)$]]></exp>
    </regex>

    <regex name="prep_genitive_full">
      <comment usedby="digit ssmlodd">
      Prepositions that are followed by genitive case
    </comment>
      <exp><![CDATA[^(без|ввиду|вдоль|вместо|вне|внутри|внутрь|возле|впереди|вследствие|вокруг|для|до|из|из-за|из-под|кроме|между|мимо|напротив|насчет|около|ото?|относительно|помимо|после|посреди|посредством|подле|позади|против|путём|ради|со?|сверх|свыше|среди|у|более|больше|менее|меньше|протяжении|нет)$]]></exp>
    </regex>

    <regex name="prep_instrumental">
      <comment usedby="date">
      Prepositions that are followed by instrumental case
    </comment>
      <exp><![CDATA[^(за|между|надо?|передо?|подо?|со?)$]]></exp>
    </regex>

    <regex name="prep_na_for_dates">
      <comment usedby="date">
      If a date is preceeded by prep. "на", it is in nominative
    </comment>
      <exp><![CDATA[^(на)$]]></exp>
    </regex>

    <regex name="prep_nomin">
      <comment usedby="date measure ssmlodd"/>
      <exp><![CDATA[^(в)$]]></exp>
    </regex>

    <regex name="prep_o">
      <comment usedby="date"/>
      <exp><![CDATA[^(о)$]]></exp>
    </regex>

    <regex name="prep_prepositional">
      <comment usedby="date ssmlodd">
      Prepositions that are followed by prepositional case
    </comment>
      <exp><![CDATA[^(во?|на|об?|по|при)$]]></exp>
    </regex>

    <regex name="prepos_ending">
      <comment usedby="measure"/>
      <exp><![CDATA[^[а-яА-Я]+(ах)$]]></exp>
    </regex>

    <regex name="preps_for_centuries">
      <comment usedby="ssmlodd">
    </comment>
      <exp><![CDATA[^(веках|вв)$]]></exp>
    </regex>

    <regex name="proper_name">
      <comment usedby="ssmlodd">
      Example: Smith
    </comment>
      <exp><![CDATA[^([A-Z][a-z][a-z]+|[А-Я][а-я][а-я]+)$]]></exp>
    </regex>

    <regex name="proper_name_fem">
      <comment usedby="ssmlodd">
      Example: Smith
    </comment>
      <exp><![CDATA[^(Екатерина|Елизавета|Анна|Мария|Elizabeth)$]]></exp>
    </regex>

    <regex name="protocol">
      <comment usedby="www"/>
      <exp><![CDATA[^(https?|ftp)(:)$]]></exp>
    </regex>

    <regex name="roman_numerals_lt20">
      <comment usedby="ssmlodd">
    </comment>
      <exp><![CDATA[^(i|ii|iii|iv|v|vi|vii|viii|ix|x|xi|xii|xiii|xiv|xv|xvi|xvii|xviii|xix|xx)$]]></exp>
    </regex>

    <regex name="roman_numerals_lt30">
      <comment usedby="ssmlodd">
    </comment>
      <exp><![CDATA[^(i|ii|iii|iv|v|vi|vii|viii|ix|x|xi|xii|xiii|xiv|xv|xvi|xvii|xviii|xix|xx|xxi|xxii|xxiii|xxiv|xxv|xxvi|xxvii|xxviii|xxix|xxx)$]]></exp>
    </regex>

    <regex name="roman_numerals_safe">
      <comment usedby="odd">
      Roman numerals II to XX, does not include I, V or X, as this might cause problems in other cases
    </comment>
      <exp><![CDATA[^(ii|iii|iv|vi|vii|viii|ix|xi|xii|xiii|xiv|xv|xvi|xvii|xviii|xix|xx|xxi|xxii|xxiii|xxiv|xxv|xxvi|xxvii|xxviii|xxix)$]]></exp>
    </regex>

    <regex name="scale_abbrev">
      <comment usedby="measure">
    </comment>
      <exp><![CDATA[^(млн|млрд|трлн|тыс|тысяч)$]]></exp>
    </regex>

    <regex name="season">
      <comment usedby="date"/>
      <exp><![CDATA[^(зима|весна|лето|осень|зимой|весной|летом|осенью)$]]></exp>
    </regex>

    <regex name="short_year">
      <comment usedby="date">
      Short year, covering all years except the 90s
    </comment>
      <exp><![CDATA[^([0-8][0-9])$]]></exp>
    </regex>

    <regex name="short_year_90s">
      <comment usedby="date">
      Short year, covering the 90s
    </comment>
      <exp><![CDATA[^(9[0-9])$]]></exp>
    </regex>

    <regex name="signs">
      <comment usedby="signs"/>
      <exp><![CDATA[^([\+:\-%])$]]></exp>
    </regex>

    <regex name="single_letter_word">
      <comment usedby="ssmlodd"/>
      <exp><![CDATA[^(К|В|С|О|И|У)\.$]]></exp>
    </regex>

    <regex name="slash">
      <comment usedby="www measure prefractions fractions signs"/>
      <exp><![CDATA[^/$]]></exp>
    </regex>

    <regex name="squared_short">
      <comment usedby="premeasure"/>
      <exp><![CDATA[^([Кк]в)\.?(м|км|см|мм|дм)\.?$]]></exp>
    </regex>

    <regex name="st">
      <comment usedby="ssmlodd"/>
      <exp><![CDATA[^([Сс])\.$]]></exp>
    </regex>

    <regex name="stray_punctuation_break_type3">
      <comment usedby="signs"/>
      <exp><![CDATA[^([,;|\-])$]]></exp>
    </regex>

    <regex name="stray_punctuation_break_type4">
      <comment usedby="signs"/>
      <exp><![CDATA[^([\.\?!]|\.\.\.)$]]></exp>
    </regex>

    <regex name="stray_punctuation_hyphen">
      <comment usedby="signs"/>
      <exp><![CDATA[^([\-])$]]></exp>
    </regex>

    <regex name="strip_left_bracket">
      <comment usedby="rest"/>
      <exp><![CDATA[^(\[|\{|<)$]]></exp>
    </regex>

    <regex name="strip_right_bracket">
      <comment usedby="rest"/>
      <exp><![CDATA[^(\]|\}|>)$]]></exp>
    </regex>

    <regex name="tele_abbreviations">
      <comment usedby="pretele">
    </comment>
      <exp><![CDATA[^(тел|ном|моб|сот)$]]></exp>
    </regex>

    <regex name="tele_digits">
      <comment usedby="pretele tele"/>
      <exp><![CDATA[^(\d{1,5})$]]></exp>
    </regex>

    <regex name="temp_float">
      <comment usedby="temp"/>
      <exp><![CDATA[^([0-9]+)(([,])([0-9]+))(°)?([ckf])$]]></exp>
    </regex>

    <regex name="temp_int_1">
      <comment usedby="temp"/>
      <exp><![CDATA[^(1)(°)([cсkкf])$]]></exp>
    </regex>

    <regex name="temp_int_1_no_degree">
      <comment usedby="temp"/>
      <exp><![CDATA[^(1)([cсkкf])$]]></exp>
    </regex>

    <regex name="temp_int_2_4">
      <comment usedby="temp"/>
      <exp><![CDATA[^(\d*?[2-4])(°)([cсkкf])$]]></exp>
    </regex>

    <regex name="temp_int_2_4_no_degree">
      <comment usedby="temp"/>
      <exp><![CDATA[^(\d*?[2-4])([cсkкf])$]]></exp>
    </regex>

    <regex name="temp_int_5_20">
      <comment usedby="temp"/>
      <exp><![CDATA[^(\d*?1[0-9]|\d*?[015-9])(°)([cсkкf])$]]></exp>
    </regex>

    <regex name="temp_int_5_20_no_degree">
      <comment usedby="temp"/>
      <exp><![CDATA[^(\d*?1[0-9]|\d*?[015-9])([cсkкf])$]]></exp>
    </regex>

    <regex name="temp_unit">
      <comment usedby="temp">
      GJL - Note Russian с and Latin c look the same, but
      are different characters, so do not remove.
    </comment>
      <exp><![CDATA[^[cсkкf]$]]></exp>
    </regex>

    <regex name="thousandscomma">
      <comment usedby="digit"/>
      <exp><![CDATA[^([+\-]?)([1-9]\d{0,2}\.[0-9]{3})$]]></exp>
    </regex>

    <regex name="thousandscomma_withpoint">
      <comment usedby="digit"/>
      <exp><![CDATA[^([+\-]?)([1-9]\d{0,2}\.[0-9]{3}),([0-9][0-9])$]]></exp>
    </regex>

    <regex name="time_hh">
      <comment usedby="time">
      Time in the format '1 o'clock'.
    </comment>
      <exp><![CDATA[^(0?[0-9]|1[0-9]|2[0-3])[\.:]00$]]></exp>
    </regex>

    <regex name="time_hh_1">
      <comment usedby="time">
      Time in the format '1 o'clock'.
    </comment>
      <exp><![CDATA[^0?(1)[\.:]00$]]></exp>
    </regex>

    <regex name="time_hh_mm">
      <comment usedby="time">
      Time in the format 'hh.mm'
    </comment>
      <exp><![CDATA[^(0?[0-9]|1[0-9]|2[0-3])[\.:](0[1-9]|[1-5][0-9])$]]></exp>
    </regex>

    <regex name="time_hh_mm_1">
      <comment usedby="time">
      Time in the format 'hh.mm'
    </comment>
      <exp><![CDATA[^(0?[0-9]|1[0-9]|2[0-3])[\.:]([02-5]1)$]]></exp>
    </regex>

    <regex name="time_hh_mm_2_4">
      <comment usedby="time">
      Time in the format 'hh.mm'
    </comment>
      <exp><![CDATA[^(0?[0-9]|1[0-9]|2[0-3])[\.:]([02-5][2-4])$]]></exp>
    </regex>

    <regex name="time_hh_mm_5_20">
      <comment usedby="time">
      Time in the format 'hh.mm'
    </comment>
      <exp><![CDATA[^(0?[0-9]|1[0-9]|2[0-3])[\.:](1[0-9]|[02-5][05-9])$]]></exp>
    </regex>

    <regex name="time_hh_mm_ss">
      <comment usedby="time">
      Time in the format 'hh:mm:ss'
    </comment>
      <exp><![CDATA[^([0-9]?[0-9]?[0-9]):([0-5][0-9]):([0-5][0-9])$]]></exp>
    </regex>

    <regex name="time_midnight">
      <comment usedby="time">
    </comment>
      <exp><![CDATA[^(00:00)$]]></exp>
    </regex>

    <regex name="up_to_3digits_ends_1">
      <comment usedby="preteledigit premeasure measure">
      Numbers ending 1, but not 11 (caught by int_pl)
    </comment>
      <exp><![CDATA[^(1|[2-9]1|[1-9][0-9]1)$]]></exp>
    </regex>

    <regex name="upper_case_2_4">
      <comment usedby="odd">
            For acronyms, identified by being case strings of length two to four.
            Extend with language-specific characters.
            Checking for the signs at the end are necessary as we are checking 'T-00'...
        </comment>
      <exp><![CDATA[^([A-ZА-Я]{2,4})[:;\.',\?!\"]?$]]></exp>
    </regex>

    <regex name="upper_case_2_4_brackets">
      <comment usedby="odd">
    </comment>
      <exp><![CDATA[^\(([A-ZА-Я]{2,4})\)[:;\.',\?!\"]?$]]></exp>
    </regex>

    <regex name="upper_case_2dotted">
      <comment usedby="odd">
      Covers cases like "S.A."
    </comment>
      <exp><![CDATA[^([A-ZА-Я])\.([A-ZА-Я])\.$]]></exp>
    </regex>

    <regex name="upper_case_3dotted">
      <comment usedby="odd">
      Covers cases like "S.A.S."
    </comment>
      <exp><![CDATA[^([A-ZА-Я])\.([A-ZА-Я])\.([A-ZА-Я])\.$]]></exp>
    </regex>

    <regex name="url_domain_2nd_tld">
      <comment usedby="www">
            Example: www.amazon.ac.uk
        </comment>
      <exp><![CDATA[^(www)(\.)([a-zA-Z0-9]+)(\.)([a-zA-Z]{2,3})(\.)([a-zA-Z]{2,4})$]]></exp>
    </regex>

    <regex name="url_domain_2nd_tld_alt">
      <comment usedby="www">
            Example: www.amazon.co.uk
        </comment>
      <exp><![CDATA[^(www)(\.)([a-zA-Z0-9]+)(\.)(co|gov|mod|net|org)(\.)([a-zA-Z]{2,4})$]]></exp>
    </regex>

    <regex name="url_domain_2nd_tld_alt_port">
      <comment usedby="www">
            Example: 'www.amazon.co.uk:8080'.
        </comment>
      <exp><![CDATA[^(www)(\.)([a-zA-Z0-9]+)(\.)(co|gov|mod|net|org)(\.)([a-zA-Z]{2,4})(:)(\d{2,5})$]]></exp>
    </regex>

    <regex name="url_domain_2nd_tld_port">
      <comment usedby="www">
            Example: 'www.amazon.ac.uk:8080'.
        </comment>
      <exp><![CDATA[^(www)(\.)([a-zA-Z0-9]+)(\.)([a-zA-Z]{2,3})(\.)([a-zA-Z]{2,4})(:)(\d{2,5})$]]></exp>
    </regex>

    <regex name="url_domain_2nms_2nd_tld">
      <comment usedby="www">
            Example: www.store.amazon.ac.uk
        </comment>
      <exp><![CDATA[^(www)(\.)([a-zA-Z0-9]+)(\.)([a-zA-Z0-9]+)(\.)([a-zA-Z]{2,3})(\.)([a-zA-Z]{2,4})$]]></exp>
    </regex>

    <regex name="url_domain_2nms_2nd_tld_alt">
      <comment usedby="www">
            Example: www.store.amazon.co.uk

        </comment>
      <exp><![CDATA[^(www)(\.)([a-zA-Z0-9]+)(\.)([a-zA-Z0-9]+)(\.)(co|gov|mod|net|org)(\.)([a-zA-Z]{2,4})$]]></exp>
    </regex>

    <regex name="url_domain_2nms_tld">
      <comment usedby="www">
            Example: www.store.amazon.jp
        </comment>
      <exp><![CDATA[^(www)(\.)([a-zA-Z0-9]+)(\.)([a-zA-Z0-9]+)(\.)([a-zA-Z]{2,4})$]]></exp>
    </regex>

    <regex name="url_domain_2nms_tld_alt">
      <comment usedby="www">
            Example: www.amazon.com
        </comment>
      <exp><![CDATA[^(www)(\.)([a-zA-Z0-9]+)(\.)([a-zA-Z0-9]+)(\.)(com|info|net|org|pro|edu|gov|asia|coop|int|jobs|mil|mobi|museum|tel|ru)$]]></exp>
    </regex>

    <regex name="url_domain_tld">
      <comment usedby="www">
            Example: www.amazon.jp
        </comment>
      <exp><![CDATA[^(www)(\.)([a-zA-Z0-9]+)(\.)([a-zA-Z]{2,4})$]]></exp>
    </regex>

    <regex name="url_domain_tld_alt">
      <comment usedby="www">
            Example: www.amazon.com
        </comment>
      <exp><![CDATA[^(www)(\.)([a-zA-Z0-9]+)(\.)(biz|com|info|net|org|pro|edu|gov|asia|coop|int|jobs|mil|mobi|museum|tel|ru)$]]></exp>
    </regex>

    <regex name="url_domain_tld_alt_port">
      <comment usedby="www">
            Example: 'www.amazon.com:8080', with TLD spoken as word.
        </comment>
      <exp><![CDATA[^(www)(\.)([a-zA-Z0-9]+)(\.)(biz|cat|com|coop|edu|gov|info|int|jobs|mil|mobi|museum|name|net|org|pro|tel|travel)(:)(\d{2,5})$]]></exp>
    </regex>

    <regex name="url_domain_tld_port">
      <comment usedby="www">
            Example: 'www.amazon.de:8080'.
        </comment>
      <exp><![CDATA[^(www)(\.)([a-zA-Z0-9]+)(\.)([a-zA-Z]{2})(:)(\d{2,5})$]]></exp>
    </regex>

    <regex name="verbs_genitive_date">
      <comment usedby="date"/>
      <exp><![CDATA[^(произошёл|произошла|произошло|произошли|случился|случилась|случилось|случились|прошёл|прошла|прошло|прошли|состоялся|состоялась|состоялось|состоялись|свершился|свершилась|свершилось|свершились|был|была|было|были|произойдет|произойдут|случится|случатся|пройдёт|пройдут|состоится|состоятся|свершится|свершатся|будет|будут|умер|умерла|умр[ёе]т|умерли|умерло|умрут|родился|родилась|родилось|родились|родится|родятся)$]]></exp>
    </regex>

    <regex name="word_hyphen_to">
      <comment usedby="ssmlodd"/>
      <exp><![CDATA[^([а-я]+)\-(то)\.?$]]></exp>
    </regex>

    <regex name="word_starting_uppercase">
      <comment usedby="ssmlodd"/>
      <exp><![CDATA[^([А-ЯЁ][а-яё]+)$]]></exp>
    </regex>

    <regex name="x">
      <comment usedby="date"/>
      <exp><![CDATA[^(х)$]]></exp>
    </regex>

    <regex name="year">
      <comment usedby="ssml">
      Covers the years from 0 to 9999.
    </comment>
      <exp><![CDATA[^([0-9]{1,4})$]]></exp>
    </regex>

    <regex name="year_2_4">
      <comment usedby="date">
      Covers the years from 2000 to 4999.
    </comment>
      <exp><![CDATA[^([2-4])([0-9]{3})$]]></exp>
    </regex>

    <regex name="year_a">
      <comment usedby="date"/>
      <exp><![CDATA[^(год|г)$]]></exp>
    </regex>

    <regex name="year_any">
      <comment usedby="date">
      Splits year into centuries and years
    </comment>
      <exp><![CDATA[^([12][0-9]|[1-9])?([0-9][0-9])$]]></exp>
    </regex>

    <regex name="year_any_n">
      <comment usedby="date">
      Splits year into centuries and years
    </comment>
      <exp><![CDATA[^([12][0-9]|[1-9])([0-9][0-9])г$]]></exp>
    </regex>

    <regex name="year_g">
      <comment usedby="date"/>
      <exp><![CDATA[^(г|года?)$]]></exp>
    </regex>

    <regex name="year_g_strict">
      <comment usedby="date"/>
      <exp><![CDATA[^(года)$]]></exp>
    </regex>

    <regex name="year_gen_pl">
      <comment usedby="date"/>
      <exp><![CDATA[^(годов)$]]></exp>
    </regex>

    <regex name="year_godach">
      <comment usedby="date"/>
      <exp><![CDATA[^(г|гг|годах)$]]></exp>
    </regex>

    <regex name="year_gode">
      <comment usedby="date"/>
      <exp><![CDATA[^(годе)$]]></exp>
    </regex>

    <regex name="year_godiy">
      <comment usedby="date"/>
      <exp><![CDATA[^(г|гг|годы)$]]></exp>
    </regex>

    <regex name="year_godom">
      <comment usedby="date"/>
      <exp><![CDATA[^(годом)$]]></exp>
    </regex>

    <regex name="year_n">
      <comment usedby="date"/>
      <exp><![CDATA[^(году|г)$]]></exp>
    </regex>

    <regex name="year_ordinal_ending">
      <comment usedby="date">
    </comment>
      <exp><![CDATA[^(м)$]]></exp>
    </regex>

    <regex name="year_pl">
      <comment usedby="date"/>
      <exp><![CDATA[^(годы|г)$]]></exp>
    </regex>

    <regex name="year_qualifier">
      <comment usedby="date">
      e.g. distant
    </comment>
      <exp><![CDATA[^(далеком|недалеком)$]]></exp>
    </regex>

    <regex name="year_restricted">
      <comment usedby="date">
      Splits year into centuries and years
    </comment>
      <exp><![CDATA[^((19|20)(0[1-9]|[2-9][0-9]))$]]></exp>
    </regex>

    <regex name="year_simple_exception">
      <comment usedby="date"/>
      <exp><![CDATA[^(исполнился|исполнится|прошёл|прошел|пройдёт|пройдет)$]]></exp>
    </regex>

    <regex name="zero_card">
      <comment usedby="digit"/>
      <exp><![CDATA[^(0+[0-9]+)$]]></exp>
    </regex>
  </regexs>
</nrules>
